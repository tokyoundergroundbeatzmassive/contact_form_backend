AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  ApiId:
    Type: String
    Description: "Existing HTTP API Gateway ID"
  SENDER_EMAIL:
    Type: String
    Description: "Sender email address"
  RECEIVER_EMAIL:
    Type: String
    Description: "Receiver email address"
  APP_PASSWORD:
    Type: String
    Description: "App password for email"

Resources:
  ContactFormFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: app.lambda_handler
      Runtime: python3.12
      Environment:
        Variables:
          SENDER_EMAIL: !Ref SENDER_EMAIL
          RECEIVER_EMAIL: !Ref RECEIVER_EMAIL
          APP_PASSWORD: !Ref APP_PASSWORD
          SMTP_PORT: 465
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - ses:SendEmail
                - ses:SendRawEmail
              Resource: "*"

  ApiGatewayIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ApiId
      IntegrationType: AWS_PROXY
      IntegrationUri: !GetAtt ContactFormFunction.Arn
      PayloadFormatVersion: "2.0"
      
  ApiGatewayRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ApiId
      RouteKey: "POST /auditive/contact"
      Target: !Join
        - /
        - - integrations
          - !Ref ApiGatewayIntegration

  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ContactFormFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 
        - "arn:aws:execute-api:${Region}:${Account}:${ApiId}/*"
        - Region: !Ref "AWS::Region"
          Account: !Ref "AWS::AccountId"
          ApiId: !Ref ApiId